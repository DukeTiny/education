package com.woniu.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class GoodsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public GoodsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNull() {
			addCriterion("typeid is null");
			return (Criteria) this;
		}

		public Criteria andTypeidIsNotNull() {
			addCriterion("typeid is not null");
			return (Criteria) this;
		}

		public Criteria andTypeidEqualTo(Integer value) {
			addCriterion("typeid =", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotEqualTo(Integer value) {
			addCriterion("typeid <>", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThan(Integer value) {
			addCriterion("typeid >", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidGreaterThanOrEqualTo(Integer value) {
			addCriterion("typeid >=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThan(Integer value) {
			addCriterion("typeid <", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidLessThanOrEqualTo(Integer value) {
			addCriterion("typeid <=", value, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidIn(List<Integer> values) {
			addCriterion("typeid in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotIn(List<Integer> values) {
			addCriterion("typeid not in", values, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidBetween(Integer value1, Integer value2) {
			addCriterion("typeid between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andTypeidNotBetween(Integer value1, Integer value2) {
			addCriterion("typeid not between", value1, value2, "typeid");
			return (Criteria) this;
		}

		public Criteria andGoodsnameIsNull() {
			addCriterion("goodsName is null");
			return (Criteria) this;
		}

		public Criteria andGoodsnameIsNotNull() {
			addCriterion("goodsName is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsnameEqualTo(String value) {
			addCriterion("goodsName =", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameNotEqualTo(String value) {
			addCriterion("goodsName <>", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameGreaterThan(String value) {
			addCriterion("goodsName >", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameGreaterThanOrEqualTo(String value) {
			addCriterion("goodsName >=", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameLessThan(String value) {
			addCriterion("goodsName <", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameLessThanOrEqualTo(String value) {
			addCriterion("goodsName <=", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameLike(String value) {
			addCriterion("goodsName like", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameNotLike(String value) {
			addCriterion("goodsName not like", value, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameIn(List<String> values) {
			addCriterion("goodsName in", values, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameNotIn(List<String> values) {
			addCriterion("goodsName not in", values, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameBetween(String value1, String value2) {
			addCriterion("goodsName between", value1, value2, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsnameNotBetween(String value1, String value2) {
			addCriterion("goodsName not between", value1, value2, "goodsname");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceIsNull() {
			addCriterion("goodsUnitPrice is null");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceIsNotNull() {
			addCriterion("goodsUnitPrice is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceEqualTo(BigDecimal value) {
			addCriterion("goodsUnitPrice =", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceNotEqualTo(BigDecimal value) {
			addCriterion("goodsUnitPrice <>", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceGreaterThan(BigDecimal value) {
			addCriterion("goodsUnitPrice >", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("goodsUnitPrice >=", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceLessThan(BigDecimal value) {
			addCriterion("goodsUnitPrice <", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceLessThanOrEqualTo(BigDecimal value) {
			addCriterion("goodsUnitPrice <=", value, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceIn(List<BigDecimal> values) {
			addCriterion("goodsUnitPrice in", values, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceNotIn(List<BigDecimal> values) {
			addCriterion("goodsUnitPrice not in", values, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("goodsUnitPrice between", value1, value2, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andGoodsunitpriceNotBetween(BigDecimal value1, BigDecimal value2) {
			addCriterion("goodsUnitPrice not between", value1, value2, "goodsunitprice");
			return (Criteria) this;
		}

		public Criteria andRestIsNull() {
			addCriterion("rest is null");
			return (Criteria) this;
		}

		public Criteria andRestIsNotNull() {
			addCriterion("rest is not null");
			return (Criteria) this;
		}

		public Criteria andRestEqualTo(Integer value) {
			addCriterion("rest =", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestNotEqualTo(Integer value) {
			addCriterion("rest <>", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestGreaterThan(Integer value) {
			addCriterion("rest >", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestGreaterThanOrEqualTo(Integer value) {
			addCriterion("rest >=", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestLessThan(Integer value) {
			addCriterion("rest <", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestLessThanOrEqualTo(Integer value) {
			addCriterion("rest <=", value, "rest");
			return (Criteria) this;
		}

		public Criteria andRestIn(List<Integer> values) {
			addCriterion("rest in", values, "rest");
			return (Criteria) this;
		}

		public Criteria andRestNotIn(List<Integer> values) {
			addCriterion("rest not in", values, "rest");
			return (Criteria) this;
		}

		public Criteria andRestBetween(Integer value1, Integer value2) {
			addCriterion("rest between", value1, value2, "rest");
			return (Criteria) this;
		}

		public Criteria andRestNotBetween(Integer value1, Integer value2) {
			addCriterion("rest not between", value1, value2, "rest");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoIsNull() {
			addCriterion("goodsPhoto is null");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoIsNotNull() {
			addCriterion("goodsPhoto is not null");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoEqualTo(String value) {
			addCriterion("goodsPhoto =", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoNotEqualTo(String value) {
			addCriterion("goodsPhoto <>", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoGreaterThan(String value) {
			addCriterion("goodsPhoto >", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoGreaterThanOrEqualTo(String value) {
			addCriterion("goodsPhoto >=", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoLessThan(String value) {
			addCriterion("goodsPhoto <", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoLessThanOrEqualTo(String value) {
			addCriterion("goodsPhoto <=", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoLike(String value) {
			addCriterion("goodsPhoto like", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoNotLike(String value) {
			addCriterion("goodsPhoto not like", value, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoIn(List<String> values) {
			addCriterion("goodsPhoto in", values, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoNotIn(List<String> values) {
			addCriterion("goodsPhoto not in", values, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoBetween(String value1, String value2) {
			addCriterion("goodsPhoto between", value1, value2, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andGoodsphotoNotBetween(String value1, String value2) {
			addCriterion("goodsPhoto not between", value1, value2, "goodsphoto");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table goods
	 * @mbg.generated  Thu Jul 25 21:09:11 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table goods
     *
     * @mbg.generated do_not_delete_during_merge Thu Jul 25 21:09:11 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}