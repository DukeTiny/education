<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:component-scan base-package="com.woniuxy" />

	<aop:aspectj-autoproxy />

	<!-- 
		spring集成hibernate，集成什么？ 
		1. 让spring管理hibernate的SessionFactory
		2.使用spring的声明式事务
	-->
	
	<!-- 让spring管理hibernate的SessionFactory开始 -->
	<bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="123" />
	</bean>
	
	<bean id="sf" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="ds"></property>
		<property name="mappingLocations" value="classpath:com/woniuxy/domain/*.hbm.xml" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<!-- 
				<prop key="hibernate.current_session_context_class">thread</prop>
				 -->
			</props>
		</property>
	</bean>
	<!-- 让spring管理hibernate的SessionFactory结束-->
	
	
	<!-- 使用spring的声明式事务开始 -->
	<!-- 
		配置事务管理器
		要知道，不同数据库管理事务的代码是不同的
		比如：mysql管理事务的代码是; begin  commit  rollback 
		比如：sql server管理事务的代码：start transaction; commit transaction; rollback transaction;
		比如：oracle，事务是隐式事务，也就是说只要执行了DML语句，就会自动开启事务。 commit  rollback
		...
		难道说，我们程序猿要根据连接的数据库的不同，而自己写出不同的事务管理代码吗？？
		不用，因为我们有事务管理器，事务管理器可以根据底层的数据库的不同，自动使用对应的事务管理代码！
	 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sf"></property>
	</bean>
	<!-- 启用声明式事务注解处理器，让@Transactional生效 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<!-- 使用spring的声明式事务结束 -->

</beans>
